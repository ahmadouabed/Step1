<template>
  <b-container
    fluid
    class="bank-container d-flex flex-column justify-content-center align-items-center w-100"
  >
    <h1 class="text-center text-info my-3" v-if="showUserAccount">{{ bankName }}</h1>
    <b-card
      class="w-50 text-center fs-3"
      border-variant="info"
      header-bg-variant="primary"
      header-text-variant="white"
      header="Log in"
      v-if="!showUserAccount"
    >
      <h2 class="text-center text-info mb-3">Welcome to BankGo</h2>
      <b-form @submit.prevent="loginUserAccount">
        <b-row cols="1" class="px-3">
          <b-col class="mb-3">
            <b-form-input
              v-model="userLogin"
              type="text"
              maxlength="20"
              placeholder="Enter your username"
              size="lg"
            ></b-form-input>
          </b-col>
          <b-col class="mb-3">
            <b-form-input
              v-model="userPin"
              type="password"
              placeholder="Enter your Pin"
              maxlength="4"
              size="lg"
            ></b-form-input>
          </b-col>
          <b-col
            ><b-button variant="primary" type="submit" class="w-100 text-light" size="lg"
              >Login</b-button
            ></b-col
          >
        </b-row>
      </b-form>
    </b-card>

    <b-container v-if="showUserAccount">
      <h2 class="text-info text-center mb-3">{{ landingMessage }}</h2>
      <b-row class="d-flex">
        <b-col>
          <!-- BALANCE -->
          <b-card class="my-3" border-variant="primary" bg-variant="info">
            <b-row>
              <b-col class="d-flex justify-content-center flex-column">
                <p class="balance__label">Current balance</p>
                <p class="balance__date">As of <span class="date">05/03/2037</span></p>
              </b-col>
              <b-col class="d-flex justify-content-end">
                <span class="balance__value">0000€</span></b-col
              >
            </b-row>
          </b-card>
        </b-col>
        <!-- LOGOUT TIMER -->
        <b-col>
          <b-card
            class="my-3"
            border-variant="info"
            header-bg-variant="primary"
            header-text-variant="white"
          >
            <p class="logout-timer py-3">
              You will be logged out in <span class="timer">05:00</span>
            </p>
          </b-card></b-col
        >
      </b-row>
      <b-row>
        <b-col>
          <!-- MOVEMENTS -->
          <b-card
            class="movements fs-4"
            border-variant="info"
            header-bg-variant="primary"
            header-text-variant="white"
            header="Transaction"
          >
            <b-container class="">
              <div
                class="movements__row"
                v-for="(transaction, index) in userTransaction"
                :key="index"
              >
                <div :class="['movements__type ', getTransactionLabel(transaction)]">
                  {{ index + 1 }} {{ getTransactionLabel(transaction).split('--')[1] }}
                </div>
                <div class="movements__value mb-2">{{ getUserCurrency(transaction) }}</div>
                <div class="movements__date mb-2">
                  {{ getTransactionDate(userAccount.movementsDates[index]) }}
                </div>
              </div>
            </b-container>
          </b-card>
        </b-col>
        <b-col>
          <!-- SUMMARY -->
          <b-row class="my-3">
            <b-col class="mx-3">
              <p class="summary__label">In</p>
              <p class="summary__value summary__value--in">0000€</p>
            </b-col>
            <b-col class="mx-3"
              ><p class="summary__label">Out</p>
              <p class="summary__value summary__value--out">0000€</p>
            </b-col>
            <b-col class="mx-3">
              <p class="summary__label">Interest</p>
              <p class="summary__value summary__value--interest">0000€</p>
            </b-col>
          </b-row>

          <b-tabs content-class="mt-3">
            <!-- OPERATION: TRANSFERS -->
            <b-tab
              title="Transfer Money"
              :active="activeTab === 'one'"
              @click="setActiveTab('one')"
            >
              <div class="operation operation--transfer" v-if="activeTab === 'one'">
                <h2 class="text-light">Transfer money</h2>
                <form class="form form--transfer">
                  <label class="form__label mb-2 text-light">Transfer to</label>
                  <b-form-input
                    v-model="transferTo"
                    type="text"
                    class="form__input form__input--to mb-2"
                  ></b-form-input>
                  <label class="form__label mb-2 text-light">Amount</label>
                  <b-form-input
                    v-model="amountTransfer"
                    type="number"
                    class="form__input form__input--amount mb-3"
                  ></b-form-input>
                  <b-button pill variant="light" class="w-100 text-primary" size="lg"
                    >Transfer Money</b-button
                  >
                </form>
              </div></b-tab
            >
            <!-- OPERATION: LOAN -->

            <b-tab title="Request Loan" :active="activeTab === 'two'" @click="setActiveTab('two')"
              ><div class="operation operation--loan" v-if="activeTab === 'two'">
                <h2 class="form_header">Request loan</h2>
                <form class="form form--loan">
                  <p class="fs-3 form__interest">Interest rate: 2%</p>
                  <label class="form__label form__label--loan mb-3">Amount</label>
                  <b-form-input
                    v-model="loanAmount"
                    type="number"
                    class="form__input form__input--loan-amount mb-3"
                  ></b-form-input>
                  <b-button pill class="w-100 btn-success" size="lg">Request Loan </b-button>
                </form>
              </div></b-tab
            >
            <!-- OPERATION: CLOSE -->
            <b-tab
              title="Close Account"
              :active="activeTab === 'three'"
              @click="setActiveTab('three')"
            >
              <div class="operation operation--close" v-if="activeTab === 'three'">
                <h2 class="text-light">Close account</h2>
                <form class="form form--close">
                  <label class="form__label mb-2 text-light">Confirm user</label>
                  <b-form-input
                    type="text"
                    v-model="confirmUser"
                    class="form__input form__input--user mb-2"
                  ></b-form-input>
                  <label class="form__label mb-2 text-light">Confirm PIN</label>
                  <b-form-input
                    type="password"
                    maxlength="6"
                    class="form__input form__input--pin mb-3"
                  ></b-form-input>

                  <b-button pill variant="primary" class="w-100" size="lg">Close Account</b-button>
                </form>
              </div></b-tab
            >
          </b-tabs>
        </b-col>
      </b-row>
    </b-container>
  </b-container>
</template>

<script>
export default {
  name: 'Bankist',

  data() {
    return {
      bankName: 'BankGo',
      activeTab: 'one',
      userLogin: '',
      userPin: '',
      sortedTransactions: false,
      showUserAccount: null,
      userAccounts: [
        {
          owner: 'Borjie Manotoc',

          movements: [200, 455.23, -306.5, 25000, -642.21, -133.9, 79.97, 1300],

          interestRate: 1.2,

          pin: 1111,

          movementsDates: [
            '2019-11-18T21:31:17.178Z',

            '2019-12-23T07:42:02.383Z',

            '2020-01-28T09:15:04.904Z',

            '2020-04-01T10:17:24.185Z',

            '2020-05-08T14:11:59.604Z',

            '2022-12-01T17:01:17.194Z',

            '2022-12-06T23:36:17.929Z',

            '2022-12-08T10:51:36.790Z'
          ],

          currency: 'EUR',

          locale: 'pt-PT'
        },

        {
          owner: 'Ruhilyo Rodriguez',

          movements: [2500, 400, -260, 830, -4210, 2200, 4600, -70],

          interestRate: 1.8,

          pin: 2222,

          movementsDates: [
            '2019-11-03T13:15:33.035Z',

            '2019-11-25T09:48:16.867Z',

            '2019-12-16T06:04:23.907Z',

            '2020-01-12T14:18:46.235Z',

            '2020-02-25T16:33:06.386Z',

            '2020-04-11T14:43:26.374Z',

            '2020-06-15T18:49:59.371Z',

            '2020-07-30T12:01:20.894Z'
          ],

          currency: 'BDT',

          locale: 'en-US'
        },
        {
          owner: 'Champoratdog Tuyo',
          movements: [5000, 3400, -150, -790, -3210, -1000, 8500, -30],
          interestRate: 1.5,
          pin: 3333,

          movementsDates: [
            '2019-11-01T13:15:33.035Z',
            '2019-11-30T09:48:16.867Z',
            '2019-12-25T06:04:23.907Z',
            '2020-01-25T14:18:46.235Z',
            '2020-02-05T16:33:06.386Z',
            '2020-04-10T14:43:26.374Z',
            '2020-06-25T18:49:59.371Z',
            '2020-07-26T12:01:20.894Z'
          ],
          currency: 'USD',
          locale: 'en-US'
        }
      ]
    }
  },
  computed: {
    /**
     *
     */
    userAccount() {
      return this.showUserAccount
    },

    /**
     * @return {string} Welcome the specific user for the bank transaction
     */
    landingMessage() {
      return this.showUserAccount ? `Welcome, ${this.showUserAccount.owner}` : null
    },

    /**
     *
     */
    userTransaction() {
      const transaction = this.userAccount.movements.slice()
      return this.sortedTransactions
        ? transaction.sort((deposit, withdraw) => deposit - withdraw)
        : transaction
    },
    /**
     *
     */
    userCurrentBalance() {
      if (!this.userAccount) {
        return '0€'
      }
      const amountOfTransaction = this.userAccounts.movements(
        (user, transaction) => user + transaction,
        0
      )
      return this.getUserCurrency(amountOfTransaction)
    }
  },

  methods: {
    /**
     *
     * @param tab
     */
    setActiveTab(tab) {
      this.activeTab = tab
    },
    /**
     *
     */
    loginUserAccount() {
      const userAccount = this.userAccounts.find(
        (user) =>
          user.owner
            .toLowerCase()
            .split(' ')
            .map((name) => name[0])
            .join('') === this.userLogin
      )

      if (userAccount?.pin === +this.userPin) {
        this.showUserAccount = userAccount
      } else {
        alert('No credentials recorded, Please try again')
      }
    },
    /**
     *
     */
    getUserCurrency(currency) {
      return new Intl.NumberFormat(this.userAccount.locale, {
        style: 'currency',
        currency: this.userAccount.currency
      }).format(currency)
    },
    /**
     *
     */
    getTransactionDate(dateOfTransaction) {
      const transactionDate = new Date(dateOfTransaction)
      const differenceInDays = Math.floor((new Date() - transactionDate) / (1000 * 60 * 60 * 24))

      if (differenceInDays === 0) {
        return 'Today'
      } else if (differenceInDays <= 7) {
        return `${differenceInDays} days ago`
      } else {
        return new Intl.DateTimeFormat(this.userAccount.locale).format(transactionDate)
      }
    },
    /**
     *
     */
    getTransactionLabel(transaction) {
      return transaction > 0 ? 'movements__type--deposit' : 'movements__type--withdrawal'
    }
  }
}
</script>

<style scoped>
@import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;600;700&display=swap');

.bank-container {
  font-family: 'Quicksand', sans-serif;
  color: #444;
  background-color: #f3f3f3;
  min-height: 80vh;
  margin: 0;
}

.login {
  display: flex;
}

.login__input {
  border: none;
  padding: 0.5rem 2rem;
  font-size: 1.6rem;
  font-family: inherit;
  text-align: center;
  width: 12rem;
  border-radius: 10rem;
  margin-right: 1rem;
  color: inherit;
  border: 1px solid #fff;
  transition: all 0.3s;
}

.login__input:focus {
  outline: none;
  border: 1px solid #ccc;
}

.login__input::placeholder {
  color: #bbb;
}

.login__btn {
  border: none;
  background: none;
  font-size: 2.2rem;
  color: inherit;
  cursor: pointer;
  transition: all 0.3s;
}

.login__btn:hover,
.login__btn:focus,
.btn--sort:hover,
.btn--sort:focus {
  outline: none;
  color: #777;
}
/* Main */

.balance__label {
  font-size: 1.8rem;
  font-weight: 500;
  margin-bottom: -0.2rem;
  color: #fff;
}

.balance__date {
  font-size: 1rem;
  color: #e3f2fd;
}

.balance__value {
  font-size: 2.6rem;
  color: #fff;
  font-weight: 400;
}

.movements {
  background-color: #fff;
  border-radius: 1rem;
  overflow: scroll;
  scroll-behavior: smooth;
}

.movements__row {
  padding: 2rem 2rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
  flex-wrap: wrap;
  border-bottom: 1px solid #56cfe1;
}

.movements__type {
  font-size: 1rem;
  text-transform: uppercase;
  font-weight: 500;
  color: #fff;
  padding: 0.1rem 1rem;
  border-radius: 10rem;
  margin-right: 20px;
}

.movements__date {
  font-size: 1.1rem;
  text-transform: uppercase;
  font-weight: 500;
  color: #666;
}

.movements__type--deposit {
  background-image: linear-gradient(to top left, #3997b3, #28af87);
}

.movements__type--withdrawal {
  background-image: linear-gradient(to top left, #e52a5a, #ff585f);
}

.movements__value {
  font-size: 1.7rem;
}

/* SUMMARY */
.summary {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
  gap: 20px;
  margin-top: 1rem;
}

.summary__label {
  font-size: 1.2rem;
  font-weight: 500;
  text-transform: uppercase;
}

.summary__value {
  font-size: 2.2rem;
}

.summary__value--in,
.summary__value--interest {
  color: #1acdd3;
}

.summary__value--out {
  color: #cf8b0b;
}

.btn--sort {
  margin-left: auto;
  border: none;
  background: none;
  font-size: 1.3rem;
  font-weight: 500;
  cursor: pointer;
}

/* OPERATIONS */
.operation {
  border-radius: 1rem;
  padding: 3rem 4rem;
  color: #333;
  min-height: 380px;
}

.operation--transfer {
  background-image: linear-gradient(to top left, #0370ff, #0385ff);
}

.operation--loan {
  background-image: linear-gradient(to top left, #052217, #080f02);
}

.operation--close {
  background-image: linear-gradient(to top left, #dd802a, #e29f3b);
}

h2 {
  margin-bottom: 1.5rem;
  font-size: 1.7rem;
  font-weight: 600;
  color: #333;
}

/* End exceptions */

.form__input {
  width: 100%;
  border: none;
  background-color: rgba(255, 255, 255, 0.4);
  font-family: inherit;
  font-size: 1.5rem;
  text-align: center;
  color: #333;
  padding: 0.3rem 1rem;
  border-radius: 0.7rem;
  transition: all 0.3s;
}

.form__input:focus {
  outline: none;
  background-color: rgba(255, 255, 255, 0.6);
}

.form_header {
  color: #66c873;
}

.form__interest {
  color: #66c873;
  text-align: center;
}

.form__label {
  font-size: 1.3rem;
  text-align: center;
  color: #66c873;
}

.form__btn {
  background-color: #66c873;
}

.form__btn:focus {
  outline: none;
  background-color: rgba(47, 146, 47, 0.8);
}

.logout-timer {
  padding: 0 0.3rem;
  text-align: right;
  font-size: 1.25rem;
}

.timer {
  font-weight: 600;
}

@media (max-width: 1200px) {
  .app {
    display: flex;
    flex-direction: column;
  }

  .balance {
    flex-direction: column;
    align-items: center;
  }

  .balance__value {
    font-size: 2.5rem;
  }

  .movements__row {
    padding: 1rem;
  }

  .summary {
    align-items: center;
    justify-content: center;
  }

  .logout-timer {
    text-align: center;
  }
}

@media (max-width: 290px) {
  .movements__row {
    flex-direction: column;
    justify-content: center;
    padding: 1rem;
  }

  .movements__type {
    margin: unset;
  }

  .movements__value {
    margin: auto;
  }
}
</style>
