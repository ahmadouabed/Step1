from flask import Blueprint, request
from src.setup_db_example.database import db
from src.setup_db_example.models.m_puppy import PuppyDb
import traceback



puppy_db_router = Blueprint("puppy_api", __name__)

@puppy_db_router.route("/api/get-sample", methods=["GET"])
def sample_read():

    return {
        "message": "sample",
    }

@puppy_db_router.route("/api/puppies", methods=["GET"])
def get_puppies():

    try:
        query = PuppyDb.query.all()
        if query: 
            puppy_dict = {}
        for info in query:
            puppy_dict.update(info.get_dict())
            puppy = puppy_dict
        return puppy
    except Exception as e:
        return {
            "success": False,
            "message_response": "Empty Table",
            "message_content": "empty"
        }, 200
    
@puppy_db_router.route("/api/puppy", methods=["POST"])
def add_puppy():
    req = request.json["params"]

    try: 
        name = req['name']
        birthdate = req['birthdate']
        breed = req['breed']
        gender= req['gender']
        fee =  req ['fee']
        new_puppy_data = PuppyDb(puppy_name = name, puppy_birthdate = birthdate, puppy_breed = breed, puppy_gender = gender, puppy_fee = fee)
        db.session.add(new_puppy_data)
        db.session.commit()
        return{
            "success": True,
            "message_response": "PUPPY SUCCESSFULLY ADDED",
            "message_content": "Puppy added"
        }, 200
    except Exception as e:
        print(traceback.format_exc())
        return {
            "success": False,
            "message_response": "PUPPY FAILED TO ADD",
            "message_content": "Failed to add"
        }, 200
        -------------
from flask import Blueprint, request
from src.setup_db_example.models.m_adoption import AdoptionDb

adoption_db_router = Blueprint("adoption_api", __name__)

@adoption_db_router.route("/api/get-sample", methods=["GET"])
def sample_read():

    return {
        "message": "sample",
    }
---------------
from flask import Blueprint, request
from src.setup_db_example.models.m_owner import OwnerDb

owner_db_router = Blueprint("owner_api", __name__)

@owner_db_router.route("/api/get-sample", methods=["GET"])
def sample_read():

    return {
        "message": "sample",
    }
------------------
<template>
  <b-container>
    <b-card title="Add Puppy for Adoption" class="mt-5">
      <b-form @submit.prevent="addPuppy">
        <b-form-group label="Puppy Name" label-for="puppy-name">
          <b-form-input id="puppy-name" v-model="form.name" required></b-form-input>
        </b-form-group>

        <b-form-group label="Puppy Birthdate" label-for="puppy-birthdate">
          <b-form-input
            id="puppy-birthdate"
            v-model="form.birthdate"
            type="date"
            required
          ></b-form-input>
        </b-form-group>

        <b-form-group label="Breed" label-for="puppy-breed">
          <b-form-input id="puppy-breed" v-model="form.puppy_breed" required></b-form-input>
        </b-form-group>

        <b-form-group label="Gender" label-for="puppy-gender">
          <b-form-select
            id="puppy-gender"
            v-model="form.gender"
            :options="[
              { value: 0, text: 'Female' },
              { value: 1, text: 'Male' }
            ]"
            required
          ></b-form-select>
        </b-form-group>

        <b-form-group label="Fee" label-for="puppy-fee">
          <b-form-input id="puppy-fee" v-model="form.fee" required></b-form-input>
        </b-form-group>

        <b-button type="submit" variant="success">Add Puppy</b-button>
      </b-form>
    </b-card>
  </b-container>
</template>

<script>
import { FetchAPI } from '@/utility/apiRequest'

export default {
  name: 'PuppyCompany',
  data() {
    return {
      form: {
        name: '',
        birthdate: '',
        breed: '',
        gender: null,
        fee: ''
      }
    }
  },
  methods: {
    async addPuppy() {
      try {
        const api = new FetchAPI()
        const response = await api.post('/api/puppy', this.form)
        console.log(response)
        if (response.success) {
          alert('Puppy added successfully!')
        } else {
          alert('Failed to add puppy.')
        }
      } catch (err) {
        console.error(err)
      }
    }
  }
}
</script>
